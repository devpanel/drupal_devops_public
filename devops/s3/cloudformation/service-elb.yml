#devpanel
#Copyright (C) 2018 devpanel

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.



AWSTemplateFormatVersion: 2010-09-09
Description: Sets up drupal
Parameters:
  ClusterName:
    Type: String

  SiteCname:
    Type: String

  SiteCnameWithDash:
    Type: String

  LoadBalancerCnameWithDash:
    Type: String

  TgPriority:
    Type: String

  CertificateArn:
    Type: String

  ContainerPort:
    Type: String

  AlbHealthCheckInterval:
    Type: String

  AlbHealthCheckPath:
    Type: String

  AlbHealthCheckTimeout:
    Type: String

  AlbHealthCheckHealthyThreshold:
    Type: String

  AlbHealthCheckUnhealthyThreshold:
    Type: String

  HasHTTPS:
    Type: String

  TypeProject:
    Type: String

  SiteId:
    Type: String

Conditions:
  hasSSL: !Equals [!Ref HasHTTPS, "yes"]

Resources:
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
#      Name: !Ref SiteCnameWithDash
      VpcId:
        'Fn::ImportValue': !Sub ${ClusterName}VPC
      Protocol: HTTP
      TargetType: "instance"
      Port: !Ref ContainerPort
      Matcher:
        HttpCode: '200,302'
      HealthCheckIntervalSeconds: !Ref AlbHealthCheckInterval
      HealthCheckPath: !Ref AlbHealthCheckPath
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: !Ref AlbHealthCheckTimeout
      HealthyThresholdCount: !Ref AlbHealthCheckHealthyThreshold
      UnhealthyThresholdCount: !Ref AlbHealthCheckUnhealthyThreshold
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30
        - Key: stickiness.enabled
          Value: true

  ListenerCertificate:
    Condition: hasSSL
    Type: AWS::ElasticLoadBalancingV2::ListenerCertificate
    Properties:
      Certificates:
        - CertificateArn: !Ref CertificateArn
      ListenerArn:
        'Fn::ImportValue': !Sub ${ClusterName}BackendAlbListenerForHttps

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn:
        !If
          - hasSSL
          - 'Fn::ImportValue': !Sub ${ClusterName}BackendAlbListenerForHttps
          - 'Fn::ImportValue': !Sub ${ClusterName}BackendAlbListenerForHttp
      Priority: !Ref TgPriority
      Conditions:
        - Field: host-header
          Values:
            - !Ref SiteCname
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

Outputs:
  TargetGroup:
    Value: !Ref TargetGroup
    Export:
      Name: !Sub ${ClusterName}-${SiteId}-TargetGroup

  TargetGroupFullName:
    Value: !Sub ${TargetGroup.TargetGroupFullName}
    Export:
      Name: !Sub ${ClusterName}-${SiteId}-TargetGroupFullName
